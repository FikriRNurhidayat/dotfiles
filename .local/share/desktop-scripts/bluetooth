#!/bin/sh

function get_device () {
  device=$(bluetoothctl devices | sed 's/^Device [^ ]* //g' | dmenu -l 5 -i -p "Device")
  if [ -n "$device" ]; then
    echo "$(bluetoothctl devices | grep "$device" | awk '{print $2}')"
  else
    echo ""
  fi
}

powered=$(bluetoothctl show | grep "Powered:" | awk '{ print $2 }')

if [ "$powered" != "yes" ]; then
  choice=$(printf "No\nYes" | dmenu -l 5 -i -p "Bluetooth")
  [ "$choice" = "Yes" ] && bluetoothctl power on && dunstify "Bluetooth is ON"
fi

action=$(echo -e "Pair\nTrust\nConnect\nScan" | dmenu -l 5 -i -p "Bluetooth")

if [ -z "$action" ]; then
  exit
fi

case "$action" in
  "Pair")
    device=$(get_device)
    bluetoothctl pair $device
    if [ $? -eq 0 ]; then
      notify-send "Bluetooth" "Device $device paired."
    else
      notify-send "Bluetooth" "Pair $device failed."
    fi
    ;;
  "Trust")
    device=$(get_device)
    bluetoothctl trust $device
    if [ $? -eq 0 ]; then
      notify-send "Bluetooth" "Device $device trusted."
    else
      notify-send "Bluetooth" "Trust $device failed."
    fi
    ;;
  "Remove")
    device=$(get_device)
    bluetoothctl remove $device
    if [ $? -eq 0 ]; then
      notify-send "Bluetooth" "Device $device removed."
    else
      notify-send "Bluetooth" "Remove $device device failed."
    fi
    ;;
  "Connect")
    device=$(get_device)
    bluetoothctl connect $device
    if [ $? -eq 0 ]; then
      notify-send "Bluetooth" "Device $device connected."
    else
      notify-send "Bluetooth" "Failed $device connection."
    fi
    ;;
  "Scan")
    bluetoothctl scan on
    sleep 3
    exec "$0" "$@"
    ;;
  *)
    echo "No action selected."
    ;;
esac
